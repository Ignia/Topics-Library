/*==============================================================================================================================
| Author        Ignia, LLC
| Client        Ignia, LLC
| Project       Topics Library
\=============================================================================================================================*/
using System;

namespace OnTopic {

  /*============================================================================================================================
  | ENUM: DIRTY OBJECTS
  \---------------------------------------------------------------------------------------------------------------------------*/
  /// <summary>
  ///   Tracks which specific items in a <see cref="Topic"/> are dirty.
  /// </summary>
  /// <remarks>
  ///   The <see cref="Topic.IsDirty(Boolean, Boolean)"/> method will return a <b>true</b> if it—or, optionally, any of its
  ///   collections—are dirty. It doesn't specificy <i>which</i> items are dirty, however. By optionally passing the <see cref=
  ///   "DirtyObjects"/> enum to the <see cref="Topic.IsDirty(out DirtyObjects)"/> overload, however, it will return an enum providing
  ///   that information.
  /// </remarks>
  [Flags]
  public enum DirtyObjects {

    /*==========================================================================================================================
    | NONE
    \-------------------------------------------------------------------------------------------------------------------------*/
    /// <summary>
    ///   Do not follow any relationships.
    /// </summary>
    None                        = 0,

    /*==========================================================================================================================
    | TOPIC
    \-------------------------------------------------------------------------------------------------------------------------*/
    /// <summary>
    ///   The <see cref="Topic"/> is dirty, notably the <see cref="Topic.Key"/> or <see cref="Topic.ContentType"/>.
    /// </summary>
    Topic                       = 1,

    /*==========================================================================================================================
    | ATTRIBUTES
    \-------------------------------------------------------------------------------------------------------------------------*/
    /// <summary>
    ///   The <see cref="Topic.Attributes"/> are dirty.
    /// </summary>
    Attributes                  = 1 << 1,

    /*==========================================================================================================================
    | REFERENCES
    \-------------------------------------------------------------------------------------------------------------------------*/
    /// <summary>
    ///   The <see cref="Topic.References"/> are dirty.
    /// </summary>
    References                  = 1 << 2,

    /*==========================================================================================================================
    | RELATIONSHIPS
    \-------------------------------------------------------------------------------------------------------------------------*/
    /// <summary>
    ///   The <see cref="Topic.Relationships"/> are dirty.
    /// </summary>
    Relationships               = 1 << 3,

    /*==========================================================================================================================
    | ALL
    \-------------------------------------------------------------------------------------------------------------------------*/
    /// <summary>
    ///   Map all relationship types.
    /// </summary>
    All = Topic | Attributes | References | Relationships

  } //Enum
} //Namespace